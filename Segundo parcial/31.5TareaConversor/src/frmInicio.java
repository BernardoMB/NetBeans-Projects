import java.awt.event.MouseAdapter; // para modificar el tiempo del tooltip
import java.awt.event.MouseEvent; // para modificar el tiempo del tooltip
import javax.swing.ToolTipManager; // para modificar el tiempo del tooltip

// Para leer los archivos de texto plano.
import java.io.*;
import java.util.*;
import javax.swing.JOptionPane;

public class frmInicio extends javax.swing.JFrame {

    // Maximo numrto de claves
    public final int DIM = 15; 
    public String claves[];
    public int n;
    // Cantidad de intentos que lleva.
    public int intentos;
    
    
    
    
    public frmInicio() {
        initComponents();
        this.setLocationRelativeTo(null);
        intentos = 0;
        leeClaves();
        
        // Enmascaramiento.
        // Esto es para que aparezca 'jajaja'
        this.pswdClave.setEchoChar('#');
        // Funcion para que el tooltip aparezca instantaneamente.
        this.pswdClave.addMouseListener(new MouseAdapter() {
            final int defaultTimeout = ToolTipManager.sharedInstance().getInitialDelay();

            @Override
            public void mouseEntered(MouseEvent e) {
                ToolTipManager.sharedInstance().setInitialDelay(0);
            }

            @Override
            public void mouseExited(MouseEvent e) {
                ToolTipManager.sharedInstance().setInitialDelay(defaultTimeout);
            }
        });
        
    }

    // Metodo que lee las claves del archivos de texto plano.
    public void leeClaves() {
        File datos;
        Scanner lee;
        claves = new String[DIM];
        n = 0;
        datos = new File("autorizados.txt");
        
        // leer el archivo.
        try {
            lee = new Scanner(datos);
        } catch (Exception e) {
            lee = null;
        }
        if (lee != null) {
            while (lee.hasNextLine() && n < DIM) {
                claves[n] = lee.nextLine();
                n = n + 1;
            }    
            lee.close();
        }
    }
    
    // Metodo que busca la clave en el vector de claves.
    public boolean busca(String cl) { 
        int i;
        i = 0;
        System.out.println(n);
        // Busqueda sequencial.
        while (i < n -1 && !claves[i].equals(cl)) {
            i = i + 1;
        }
        
        return claves[i].equals(cl);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnAceptar = new javax.swing.JButton();
        pswdClave = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Contraseña:");

        btnAceptar.setText("Aceptar");
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });

        pswdClave.setToolTipText("Entero de 4 digitos.");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(44, 44, 44))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnAceptar)
                        .addGap(70, 70, 70))))
            .addGroup(layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(pswdClave, javax.swing.GroupLayout.DEFAULT_SIZE, 197, Short.MAX_VALUE)
                .addGap(70, 70, 70))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(108, 108, 108)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(pswdClave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(66, 66, 66)
                .addComponent(btnAceptar)
                .addContainerGap(72, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed
        // TODO add your handling code here:
        
        // Neceitaremos un vector de caracteres.
        char aux[];
        String cl;
        aux = this.pswdClave.getPassword();
        // Ahora se convierte el vector de caracteres en un String.
        cl = String.valueOf(aux);
        if (busca(cl)) {
            System.out.println("clave encontrada");
            this.setVisible(false);
        } else {
            // Incrementa los intentos.
            intentos++;
            System.out.println("No se encontró la clave");
            // Muestra mensaje de error si no encuentra la clave.
            if (intentos == 3) {
                // Termina el programa porque se le acabaron los intentos.
                System.exit(0);
            } else {
                JOptionPane.showMessageDialog(null, "Clave Incorerecta. Intente otra vez.\nLe quedan " + (3 - intentos) + " intentos.", "Error",JOptionPane.ERROR_MESSAGE);
            }
        }
        
    }//GEN-LAST:event_btnAceptarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmInicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmInicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmInicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmInicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmInicio().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAceptar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPasswordField pswdClave;
    // End of variables declaration//GEN-END:variables
}
